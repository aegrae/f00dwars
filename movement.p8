pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
x = 64
y = 64
x_vel = 0
y_vel = 0
g_dir = 3
g = -0.3

move_speed = 2

x_min = 1
x_max = 127 - 8
y_min = 1
y_max = 127 - 8

t_res = 5
prev_t = 0

jump_vel = 5
jumping = true

fruits = {}
fall_speed = 2
num_fruits = 12
f_types = 3

function _init()
 for i=1,num_fruits do
  fruits[i] = {rnd(f_types),rnd(128),-rnd(64)}
 end
end

function _update()
 gravity_timer()
 movement_input()
 apply_gravity()
 fruits_fall()
end

function _draw()
 cls()
 draw_border()
	draw_center_arrow()
	draw_fruits()
 spr(0,x,y)
end

function draw_fruits()
 for i,v in pairs(fruits) do
  spr(v[0], v[1], v[2])
 end
end

function fruits_fall()
 for i,v in pairs(fruits) do
  p_y = v[2]
  if p_y > y_max then
   v[2] = 0
   v[1] = rnd(128)
   v[0] = rnd(f_types)
  else
   v[2] = p_y + fall_speed 
  end
 end
end

function draw_center_arrow()
 if g_dir == 0 then
  spr(32, 64, 64)
 end
 if g_dir == 1 then
  spr(34, 64, 64)
 end
 if g_dir == 2 then
  spr(17, 64, 64)
 end
 if g_dir == 3 then
  spr(49, 64, 64)
 end
end

function draw_border()
 line(0, 0, 0, 127, 12)
 line(0, 127, 127, 127, 3)
 line(127, 127, 127, 0, 8)
 line(127, 0, 0, 0, 10)
end

function movement_input()
 g_up_down = (g_dir == 2) or (g_dir == 3)
 if btn(0) and g_up_down then
  x_vel = 0
  x = x - move_speed
 end
 if btn(1) and g_up_down then
  x_vel = 0
  x = x + move_speed
 end
 if btn(2) and not g_up_down then
  y_vel = 0
  y = y - move_speed
 end
 if btn(3) and not g_up_down then
  y_vel = 0
  y = y + move_speed
 end
 if btnp(4) and not jumping then
  jump()
 end
end

function jump()
 jumping = true
 if g_dir == 0 then
  x_vel = jump_vel
 end
 if g_dir == 1 then
  x_vel = -jump_vel
 end
 if g_dir == 2 then
  y_vel = jump_vel
 end
 if g_dir == 3 then
  y_vel = -jump_vel
 end 
end

function gravity_timer()
	if time() % t_res < prev_t then
	 change_gravity(flr(rnd(4)))
	end
	prev_t = time() % t_res
end

function change_gravity(new_g)
 g_dir = new_g
 jumping = true
end

function apply_gravity()
 if g_dir == 0 then
  x_vel = x_vel + g
 end
 if g_dir == 1 then
  x_vel = x_vel - g
 end
 if g_dir == 2 then
  y_vel = y_vel + g
 end
 if g_dir == 3 then
  y_vel = y_vel - g
 end
 
 x = x + x_vel
 y = y + y_vel
 
 if x < x_min then
  x = x_min
  x_vel = 0
  if g_dir == 0 then
   jumping = false
  end
 end
 if x > x_max then
  x = x_max
  x_vel = 0
  if g_dir == 1 then
   jumping = false
  end
 end
 if y < y_min then
  y = y_min
  y_vel = 0
  if g_dir == 2 then
   jumping = false
  end
 end
 if y > y_max then
  y = y_max
  y_vel = 0
  if g_dir == 3 then
   jumping = false
  end
 end
end
__gfx__
00000b0000ffff000033330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000bb00ffffff00333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000099bbfff00fff3333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00099900ff0000ff3333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00999900ff0000ff0303303000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
09999000fff00fff0003300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
099000000ffffff00003300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9900000000ffff000003300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000005550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000055555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00050000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00550000000000000000550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05555555000000005555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00550000000000000000550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00050000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000055555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000005550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
